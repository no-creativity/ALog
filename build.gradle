/*
 * MIT License
 *
 * Copyright (c) 2016 Yan QiDong
 */

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.2'
        classpath 'org.no_creativity:AnVerGen:1.0.0'
    }
}

repositories {
    jcenter()
}

import org.no_creativity.anvergen.Ver

apply plugin: 'com.android.library'

// noinspection GroovyMissingReturnStatement
android {
    compileSdkVersion 24
    buildToolsVersion "24.0.3"
    defaultConfig {
        minSdkVersion 8
        //noinspection OldTargetApi
        targetSdkVersion 24
        versionCode Ver.generateVersionCode()
        versionName Ver.generateVersionName()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
        }
        debug {
            testCoverageEnabled true
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

group 'org.no_creativity.aar'
version Ver.generateVersionName()

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))

    options {
        locale 'en'
        encoding 'UTF-8'
        charSet 'UTF-8'
        author true
        version true
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

def aarDir = "$buildDir/libs"
def aarName = "${project.name}-${version}.aar"

task copyAar(type: Copy, dependsOn: check) {
    from ("$buildDir/outputs/aar") {
        include '*-release.aar'
        rename '.*-release.aar', aarName
    }
    into aarDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives(file("$aarDir/$aarName")) {
        builtBy copyAar
    }
}
